{"version":3,"sources":["ImageDataCard.jsx","DropBox.jsx","ImageCard.jsx","App.js","serviceWorker.js","index.js"],"names":["DataCard","data","this","props","react_default","a","createElement","Grid_default","container","direction","map","d","item","Typography_default","gutterBottom","class","confidence","React","Component","ImageDataCard","_this$props","imageSrc","classes","Card_default","className","card","spacing","justify","imageContainer","image","src","alt","length","ImageDataCard_DataCard","PureComponent","withStyles","theme","padding","borderRadius","maxWidth","cardActions","display","justifyContent","text","width","height","unit","backgroundColor","maxHeight","URL","initialState","status","filename","DropBox","statusTypes","state","onDrop","acceptedFiles","rejectedFiles","file","size","_this","setState","name","reader","FileReader","readAsDataURL","onloadend","e","_ref","result","FormData","append","axios","post","headers","accept","Accept-Language","Content-Type","concat","_boundary","then","response","catch","error","handleNew","_this$state","TryNew","Button_default","variant","color","onClick","alignItems","CircularProgress_default","thickness","src_ImageDataCard","es","multiple","_ref2","getRootProps","getInputProps","isDragActive","Object","assign","classNames","dropzone","defineProperty","activeDropzone","CloudUpload_default","icon","isMobile","limit","cursor","borderColor","palette","primary","main","borderStyle","borderWidth","fontSize","media","objectFit","image_path","title","CardMedia_default","component","App","Fragment","AppBar_default","position","appBar","Toolbar_default","PhotoCamera_default","noWrap","heroUnit","heroContent","align","paragraph","mainImage","src_ImageCard","layout","src_DropBox","onImage","showImage","footer","marginRight","background","paper","margin","marginLeft","breakpoints","up","paddingTop","marginBottom","Boolean","window","location","hostname","match","createMuiTheme","blue","typography","useNextVariants","ReactDOM","render","core_styles","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.383a7928.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\nimport Card from '@material-ui/core/Card';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core';\n\n\nconst styles = theme => ({\n  card: {\n    padding: 12,\n    borderRadius: 7,\n    maxWidth: 640\n  },\n  cardActions: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  text: {\n    width: 'calc(100% - 24px);',\n    height: theme.spacing.unit * 40,\n    backgroundColor: '#eee',\n    borderRadius: 5,\n    padding: 10,\n  },\n  image: {\n    maxHeight: '100%',\n    maxWidth: '100%'\n  },\n  imageContainer: {\n    backgroundColor: '#eee'\n  }\n});\n\nclass DataCard extends React.Component {\n  render(){\n    const { data } = this.props;\n    return (\n      <Grid container direction=\"column\">\n        {data.map(d =>\n          <Grid item>\n            <Typography gutterBottom>\n              {d.class} : {d.confidence}\n            </Typography>\n          </Grid>\n        )}\n      </Grid>\n    )\n  }\n}\n\n\nclass ImageDataCard extends PureComponent {\n  render() {\n    const { imageSrc, data, classes } = this.props;\n\n    return (\n      <Card className={classes.card}>\n        <Grid container direction=\"column\" spacing={24} justify=\"center\">\n          <Grid item className={classes.imageContainer}>\n            <img className={classes.image} src={imageSrc} alt=\"Uploaded file\" />\n          </Grid>\n          <Grid item>\n            {data.length > 0?\n              <DataCard data={data} />\n            : <label>No class found in the Image</label> }\n          </Grid>\n        </Grid>\n      </Card>\n    )\n  }\n}\n\nexport default withStyles(styles)(ImageDataCard);","import React from 'react';\nimport classNames from 'classnames'\nimport UploadIcon from '@material-ui/icons/CloudUpload';\nimport Dropzone from 'react-dropzone';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport { isMobile } from 'react-device-detect';\nimport ImageDataCard from './ImageDataCard';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst styles = theme => ({\n  dropzone: {\n    cursor: 'pointer',\n    padding: theme.spacing.unit * 3,\n    borderColor: theme.palette.primary.main,\n    borderStyle: 'dashed',\n    borderWidth: 3,\n    borderRadius: 10,\n  },\n  activeDropzone: {\n    backgroundColor: theme.palette.primary[100]\n  },\n  icon: {\n    color: theme.palette.primary.main,\n    fontSize: 60\n  },\n  limit: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  }\n})\n\nconst URL = '/scan'\n\nconst initialState = {\n  status: 'NEW',\n  image: null,\n  data: [],\n  filename: \"\"\n}\n\nclass DropBox extends React.Component {\n  statusTypes = ['NEW', 'READING', 'UPLOADING', 'SUCCESS', 'FAILED', 'REJECTED', 'FILELIMIT']\n  state = initialState\n\n  onDrop = (acceptedFiles, rejectedFiles) => {\n    let file = acceptedFiles[0]\n    if(!file){\n      file = rejectedFiles[0]\n      if(file){\n        this.setState({ status: 'REJECTED', filename: file.name})\n      }\n      return\n    };\n\n    // check file size < 2MB\n    if(file.size > 2097152) { // 2 * 1024 * 1024\n      this.setState({ status: 'FILELIMIT' })\n      return\n    }\n\n    this.setState({ status: 'READING', filename: file.name })\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = (e) => this.setState(({status}) => (\n      { image: reader.result, status: status === 'READING'? 'UPLOADING' : status }))\n\n    let data = new FormData();\n    data.append('image', file);\n\n    axios.post(URL, data, {\n      headers: {\n        'accept': 'application/json',\n        'Accept-Language': 'en-US,en;q=0.8',\n        'Content-Type': `multipart/form-data; boundary=${data._boundary}`,\n      }\n    }).then((response) => {\n      const data = response.data;\n      this.setState({ data, status: 'SUCCESS' })\n    }).catch((error) => {\n      this.setState({ status: 'FAILED' })\n    });\n  }\n\n  handleNew = () => this.setState(initialState)\n\n  render() {\n    const { classes } = this.props;\n    const { status, filename, image, data } = this.state\n\n    const TryNew = (\n      <Button variant='outlined' color=\"primary\" onClick={this.handleNew}>Try New</Button>\n    )\n\n    switch(status){\n      case 'READING':\n      case 'UPLOADING':\n        return (\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item>\n              <CircularProgress thickness={5} />\n            </Grid>\n            <Grid item>\n              <Typography variant=\"h4\">{'Scanning the image'}<strong>{filename}</strong></Typography>\n            </Grid>\n          </Grid>\n        )\n      case 'SUCCESS':\n        return (\n          <Grid container direction=\"column\" spacing={24} alignItems=\"center\">\n            <Grid item>\n              {TryNew}\n            </Grid>\n            <Grid item>\n              <ImageDataCard imageSrc={image} data={data} />\n            </Grid>\n            <Grid item>\n              {TryNew}\n            </Grid>\n          </Grid>\n        )\n      case 'FAILED':\n      case 'REJECTED':\n        return (\n          <Grid container direction=\"column\" alignItems=\"center\">\n            <Grid item>\n              <Typography variant=\"h5\" gutterBottom>\n                {status === 'FAILED'? \"Failed to scan the image \" : \"File type is not supported \"}<strong>{filename}</strong>\n              </Typography>\n            </Grid>\n            <Grid item>\n              {TryNew}\n            </Grid>\n          </Grid>\n        )\n      default:\n        return (\n          <div>\n            <Dropzone\n              onDrop={this.onDrop}\n              accept=\"image/*\"\n              multiple={false}\n              >\n              {({ getRootProps, getInputProps, isDragActive }) => {\n                return (\n                  <Grid container direction=\"column\" alignItems=\"center\"\n                  {...getRootProps()}\n                  className={classNames(classes.dropzone, { [classes.activeDropzone]: isDragActive })}\n                  >\n                    <input {...getInputProps()} />\n                    <Grid item>\n                      <UploadIcon className={classes.icon} />\n                    </Grid>\n                    {!isMobile &&\n                      <Grid item>\n                        <Typography variant=\"h5\" color=\"textSecondary\">\n                          DRAG & DROP\n                        </Typography>\n                      </Grid>\n                    }\n                    <Grid item>\n                      <Typography variant=\"h6\">\n                        Click to select an image file\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                )\n              }}\n            </Dropzone>\n            <Typography variant=\"caption\" color={status==='FILELIMIT'?\"error\":\"default\"} className={classes.limit}>\n              {\"Filesize limit: < 2MB\"}\n            </Typography>\n          </div>\n        )\n    }\n  }\n}\n\nexport default withStyles(styles)(DropBox);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\n\nconst styles = {\n   card: {\n      maxWidth: 345,\n   },\n   media: {\n      objectFit: 'cover',\n   },\n};\n\nfunction ImageCard(props) {\n   const { classes, image_path, title } = props;\n   return (\n      <Card className={classes.card}>\n         <CardMedia\n            component=\"img\"\n            alt={title}\n            className={classes.media}\n            height=\"140\"\n            image={image_path}\n            title={title}\n         />\n      </Card>\n   );\n}\n\nImageCard.propTypes = {\n   classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ImageCard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport DropBox from './DropBox';\nimport ImageCard from './ImageCard';\n\nconst teddyImg = '/img/teddy.png';\nconst grizzlyImg = '/img/grizzly.png';\nconst blackImg = '/img/black.png';\n\nconst styles = theme => ({\n  appBar: {\n    position: 'static',\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2,\n  },\n  heroUnit: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  heroContent: {\n    // maxWidth: 600,\n    margin: '0 auto',\n    padding: `${theme.spacing.unit * 2}px 0 ${theme.spacing.unit}px`,\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    backgroundColor: theme.palette.background.paper,\n    [theme.breakpoints.up(1100 + theme.spacing.unit * 3 * 2)]: {\n      width: 1100,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  footer: {\n    padding: theme.spacing.unit * 3,\n    paddingTop: theme.spacing.unit * 6\n  },\n  mainImage: {\n    backgroundColor: '#aaa',\n    padding: 20,\n    marginBottom: theme.spacing.unit * 5\n  }\n});\n\n\nclass App extends React.Component {\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <React.Fragment>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar>\n            <CameraIcon className={classes.icon} />\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              Bear Classification\n          </Typography>\n          </Toolbar>\n        </AppBar>\n        <main>\n          {/* Hero unit */}\n          <div className={classes.heroUnit}>\n            <div className={classes.heroContent}>\n              <Typography component=\"h2\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Teddy | Grizzley | Black\n              </Typography>\n              <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                Classifies given image file to one of the above categories. Go ahead and drop an image below to try it out.\n              </Typography>\n            </div>\n            <div className={classes.mainImage}>\n              <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\" spacing={40}>\n                <Grid item>\n                  <ImageCard image_path={teddyImg} title=\"Teddy\" />\n                </Grid>\n                <Grid item>\n                  <ImageCard image_path={grizzlyImg} title=\"Grizzly\" />\n                </Grid>\n                <Grid item>\n                  <ImageCard image_path={blackImg} title=\"Black\" />\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className={classes.layout}>\n            <DropBox onImage={this.showImage} />\n          </div>\n        </main>\n        {/* Footer */}\n        <footer className={classes.footer}>\n          <Typography variant=\"h6\" align=\"center\" gutterBottom>\n            &copy; Zero\n          </Typography>\n        </footer>\n        {/* End footer */}\n      </React.Fragment>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}